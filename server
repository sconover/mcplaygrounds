#!/usr/bin/env python

import argparse
import os.path

from lib.core import ssh_exec, ssh_exec_all, ssh_get, save_settings

parser = argparse.ArgumentParser()
subparsers = parser.add_subparsers(help='sub-command help')

def add_simple_subparser(f, command_name):
  p = subparsers.add_parser(command_name, help='{} help'.format(command_name))
  p.set_defaults(func=f)

def use(args):
  save_settings({
    'ec2_private_key_file': args.ec2_private_key_file,
    'ec2_user': args.ec2_user,
    'ec2_host': args.ec2_host
  })

use_parser = subparsers.add_parser('use', help='use help')
use_parser.add_argument('ec2_private_key_file', help='ec2 private key file')
use_parser.add_argument('ec2_user', help='user to log into the host as')
use_parser.add_argument('ec2_host', help='ec2 target host')
use_parser.set_defaults(func=use)

def check(args):
  ssh_exec("uname -a")
add_simple_subparser(check, "check")

def bootstrap(args):
  ssh_exec_all([
    "sudo add-apt-repository ppa:cwchien/gradle", # need a modern gradle
    "sudo apt-get update",
    "sudo apt-get install build-essential git gradle htop maven openjdk-7-jdk python-pip python-dev tmux -y"
  ])
  ssh_exec("file RaspberryJuiceSpongePlugin/.git || git clone https://github.com/sconover/RaspberryJuiceSpongePlugin")
add_simple_subparser(bootstrap, "bootstrap")

def clean_code(args):
  ssh_exec_all([
    "rm -rf RaspberryJuiceSpongePlugin",
  ])
add_simple_subparser(clean_code, "clean-code")

def clean_artifacts(args):
  ssh_exec_all([
    "rm -rf minecraft-latest",
  ])
add_simple_subparser(clean_artifacts, "clean-artifacts")

def clean_all(args):
  clean_code(args)
  clean_artifacts(args)
add_simple_subparser(clean_all, "clean-all")

def pull(args):
  ssh_exec_all([
    "cd RaspberryJuiceSpongePlugin",
    "git pull",
    "git submodule update --init --recursive"
  ])
add_simple_subparser(pull, "pull")

def build_minecraft_gradle(args):
  ssh_exec_all([
    "cd RaspberryJuiceSpongePlugin/submodules/Sponge",
    "time ./gradlew setupDecompWorkspace --refresh-dependencies",
    "time ./gradlew"
  ])
add_simple_subparser(build_minecraft_gradle, "build-minecraft-gradle")

def populate_minecraft_latest(args):
  sponge_build_dir = "RaspberryJuiceSpongePlugin/submodules/Sponge/build/libs/"
  new_executable_jar = os.path.join(sponge_build_dir, ssh_get("ls {} | egrep '^sponge-' | egrep -v '(javadoc|release|sources)'".format(sponge_build_dir)))

  latest_build_dir = "minecraft-latest"
  latest_minecraft_server_jar_name = "sponge-minecraft-server.jar"

  ssh_exec_all([
    "rm -rf {}".format(latest_build_dir),
    "mkdir {}".format(latest_build_dir),
    "cp {} {}".format(new_executable_jar, os.path.join(latest_build_dir, latest_minecraft_server_jar_name)),
    "cd {}".format(latest_build_dir),
    "time java -jar {} install".format(latest_minecraft_server_jar_name),
    "ls -lh ."
  ])
add_simple_subparser(populate_minecraft_latest, "populate-minecraft-latest")

def build_minecraft_server(args):
  build_minecraft_gradle(args)
  populate_minecraft_latest(args)
add_simple_subparser(build_minecraft_server, "build-minecraft-server")

def build_raspberry_juice_plugin(args):
  ssh_exec_all([
    "cd RaspberryJuiceSpongePlugin",
    "time gradle"
  ])
add_simple_subparser(build_raspberry_juice_plugin, "build-raspberry-juice-plugin")

args = parser.parse_args()
args.func(args)
